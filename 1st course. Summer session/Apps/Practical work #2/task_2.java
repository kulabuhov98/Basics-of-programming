/*
 * Вариант: 20. Номер зачетной книжки: 21-677.
 *
 * Автор: Кулабухов Александр Максимович, ЗИТ-21
 * Дата: 17.06.2022
 *
 * Задача 2. Найти максимальный и минимальный элементы в одномерном массиве, а также их 
 * порядковые номера. Затем упорядочить по возрастанию элементы, расположенные между 
 * максимальным и минимальным элементами.
 */

package task_2;

import java.security.SecureRandom; /* Класс криптографической генерации случайных чисел */

public class task_2 {
	public static void main(String[] args) {
		SecureRandom secureRandom = new SecureRandom(); /* Объект класса */
		int array[] = new int[10]; /* Инициализация одномерного массива */
		
		/*
		 * i - вспомогательная переменная
		 * j - вспомогательная переменная
		 * temp - вспомогательная переменная
		 * maxArrayItem - максимальный элемент в одномерном массиве
		 * minArrayItem - минимальный элемент в одномерном массиве
		 * indexMaxArrayItem - порядковый номер максимального элемента в одномерном массиве
		 * indexMinArrayItem - порядковый номер минимального элементв в одномерном массиве
		 */
		int i, j, temp, maxArrayItem = array[0], minArrayItem = array[0], indexMaxArrayItem = 0, indexMinArrayItem = 0;

		System.out.println("Одномерный массив из случайных значений:"); /* Сообщение пользователю */
		for (i = 0; i < 10; i++) { /* Цикл по столбцам */
			array[i] = secureRandom.nextInt(30) - 15; /* Заполнение двумерного массива случайными значениями */
			System.out.print(array[i] + " "); /* Сообщение пользователю */
		}
			
		for (i = 1; i < 10; i++) { /* Цикл по столбцам */
			if (array[i] > maxArrayItem) { /* Определяем максимальный элемент одномерного массива */
				maxArrayItem = array[i]; /* Максимальный элемент в одномерном массиве */
				indexMaxArrayItem = i; /* Порядковый номер максимального элемента в одномерном массиве */
			}
			if (array[i] < minArrayItem) { /* Определяем минимальный элемент одномерного массива */
				minArrayItem = array[i]; /* Минимальный элемент в одномерном массиве */
				indexMinArrayItem = i; /* Порядковый номер минимального элемента в одномерном массиве */
			}
		}

		System.out.println("\nМаксимальный элемент массива " + maxArrayItem + ", его порядковый номер " + indexMaxArrayItem + "."); /* Сообщение пользователю */
		System.out.println("Минимальный элемент массива " + minArrayItem + ", его порядковый номер " + indexMinArrayItem + "."); /* Сообщение пользователю */
	
		/* Выполняем сортировку элементов одномернного массива в заданном диапазоне методом пузырька (Bubble sort) */
		if (indexMaxArrayItem > indexMinArrayItem) {
			/* Внешний цикл каждый раз сокращает фрагмент массива, так как внутренний цикл каждый раз ставит в конец фрагмента максимальный элемент */
			for (i = indexMaxArrayItem; i > 0; i--) {
				for (j = 0; j < i; j++) {
					/* Сравниваем элементы попарно, если они имеют неправильный порядок, меняем их местами */
					if (array[j] > array[j + 1]) {
						temp = array[j];
						array[j] = array[j + 1];
						array[j + 1] = temp;
					}
				}
			}
		} else {
			/* Внешний цикл каждый раз сокращает фрагмент массива, так как внутренний цикл каждый раз ставит в конец фрагмента максимальный элемент */
			for (i = indexMinArrayItem; i > 0; i--) {
				for (j = 0; j < i; j++) {
					/* Сравниваем элементы попарно, если они имеют неправильный порядок, меняем их местами */
					if (array[j] > array[j + 1]) {
						temp = array[j];
						array[j] = array[j + 1];
						array[j + 1] = temp;
					}
				}
			}
		}
		
		System.out.println("Одномерный массив с упорядочинными по возрастанию, расположенными между максимальным и минимальным элементами:"); /* Сообщение пользователю */
		for (i = 0; i < 10; i++) { /* Цикл по столбцам */
			System.out.print(array[i] + " "); /* Сообщение пользователю */
		}
	}
}
